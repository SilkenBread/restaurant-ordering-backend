services:
  django:
    build:
      context: .
    container_name: restaurant-ordering
    env_file:
      - .env
    volumes:
      - .:/restaurant-ordering
    ports:
      - "8000:8000"
    depends_on:
      - database
    networks:
      - restaurant-ordering-network
    command: python manage.py runserver 0.0.0.0:8000

  database:
    image: postgres:17.3
    container_name: restaurant-ordering-postgres
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - restaurant-ordering-network
    ports:
      - "5432:5432"

  redis:
    image: redis:7.4
    container_name: restaurant-ordering-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - restaurant-ordering-network
    
  celery_worker:
    build:
      context: .
    container_name: restaurant-ordering-celery
    env_file:
      - .env
    command: celery -A config worker --loglevel=info
    depends_on:
      - redis
      - django
    environment:
      - TZ=America/Bogota
    networks:
      - restaurant-ordering-network

  celery_beat:
    build:
      context: .
    container_name: restaurant-ordering-celery-beat
    env_file:
      - .env
    command: celery -A config beat --loglevel=info
    depends_on:
      - redis
      - django
      - celery_worker
    environment:
      - TZ=America/Bogota
    networks:
      - restaurant-ordering-network

  flower:
    build:
      context: .
    container_name: restaurant-ordering-flower
    env_file:
      - .env
    command: celery -A config flower --port=5555
    depends_on:
      - redis
      - celery_worker
    ports:
      - "5555:5555"
    environment:
      - TZ=America/Bogota
    networks:
      - restaurant-ordering-network

networks:
  restaurant-ordering-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
