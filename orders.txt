// 1. Crear una nueva orden (POST a /api/orders/)
{
    "customer_id": 1,
    "restaurant_id": 2,
    "total_amount": 45.75,
    "delivery_address": "Calle Principal 123, Apt 4B",
    "special_instructions": "Tocar el timbre dos veces, el perro no muerde",
    "estimated_delivery_time": "2025-04-01T18:30:00",
    "items": [
      {
        "menu_item_id": 5,
        "quantity": 2,
        "subtotal": 25.50,
        "note": "Sin cebolla por favor"
      },
      {
        "menu_item_id": 8,
        "quantity": 1,
        "subtotal": 12.75,
        "note": "Extra picante"
      },
      {
        "menu_item_id": 3,
        "quantity": 1,
        "subtotal": 7.50,
        "note": null
      }
    ]
  }
  
  // 2. Crear otra orden con diferentes datos (POST a /api/orders/)
  {
    "customer_id": 2,
    "restaurant_id": 1,
    "total_amount": 32.99,
    "delivery_address": "Avenida Secundaria 456, Torre B, Piso 10",
    "special_instructions": "Dejar en recepción",
    "items": [
      {
        "menu_item_id": 1,
        "quantity": 1,
        "subtotal": 18.99
      },
      {
        "menu_item_id": 7,
        "quantity": 2,
        "subtotal": 14.00,
        "note": "Con extra queso"
      }
    ]
  }
  
  // 3. Actualizar estado de una orden (PUT a /api/orders/1/)
  {
    "status": "completed",
    "estimated_delivery_time": "2025-04-01T18:15:00"
  }
  
  // 4. Actualizar dirección y notas especiales (PUT a /api/orders/2/)
  {
    "delivery_address": "Avenida Secundaria 456, Torre B, Piso 12",
    "special_instructions": "Llamar al llegar, no hay timbre"
  }
  
  // 5. Marcar una orden como cancelada (PUT a /api/orders/1/)
  {
    "status": "cancelled",
    "special_instructions": "Cliente canceló por teléfono"
  }
  
  // 6. Solicitud con datos inválidos para probar validación (POST a /api/orders/)
  {
    "customer_id": 3,
    "restaurant_id": 4,
    "total_amount": -10.50,
    "delivery_address": "Calle Inventada 789",
    "items": [
      {
        "menu_item_id": 9,
        "quantity": 0,
        "subtotal": 15.00
      }
    ]
  }
  
  // 7. Consultar órdenes con filtros (GET a /api/orders/?status=pending&customer=1)
  // No requiere cuerpo JSON, solo parámetros en la URL
  
  // 8. Consultar órdenes con rango de fechas (GET a /api/orders/?date_from=2025-04-01T00:00:00&date_to=2025-04-02T00:00:00)
  // No requiere cuerpo JSON, solo parámetros en la URL
  
  // 9. Consultar órdenes por rango de monto (GET a /api/orders/?min_amount=30&max_amount=50)
  // No requiere cuerpo JSON, solo parámetros en la URL
  
  // 10. Consultar por restaurante específico (GET a /api/orders/?restaurant=2)
  // No requiere cuerpo JSON, solo parámetros en la URL